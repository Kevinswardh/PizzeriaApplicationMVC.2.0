@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
        <li class="nav-item px-4">
            <a class="btn btn-success btn-xs float-end" asp-controller="Order" asp-action="Index">Beställ nu</a>

        </li>
    }
    else if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
    {
        
    }
    else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
         <li class="nav-item px-4">
            <a class="btn btn-success btn-xs float-end" asp-controller="Order" asp-action="Index">Beställ nu</a>

        </li>
}
</ul>
